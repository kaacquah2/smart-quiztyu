const fetch = require('node-fetch');

async function testDeepSeekIntegration() {
  console.log('🧠 Testing DeepSeek AI Recommendations Integration...\n');

  const API_BASE = 'http://localhost:3001';

  // Test 1: Course-specific recommendations
  try {
    console.log('1. Testing course-specific DeepSeek recommendations...');
    const response = await fetch(`${API_BASE}/api/deepseek-recommendations`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        courseId: 'data-structures',
        quizResults: [
          {
            quizId: 'data-structures-basics',
            courseId: 'data-structures',
            quizTitle: 'Data Structures Basics',
            score: 85,
            total: 10,
            strengths: ['Arrays', 'Linked Lists'],
            weaknesses: ['Dynamic Programming', 'Graph Algorithms']
          }
        ]
      })
    });

    console.log(`Response status: ${response.status}`);
    
    if (response.ok) {
      const data = await response.json();
      console.log('✅ Success! Course-specific DeepSeek recommendations generated');
      console.log(`   Generated By: ${data.generatedBy || 'Unknown'}`);
      console.log(`   Enhanced: ${data.enhanced ? 'Yes' : 'No'}`);
      console.log(`   Recommendations: ${data.recommendations?.length || 0}`);
      if (data.recommendations?.length > 0) {
        console.log(`   First recommendation: ${data.recommendations[0].title}`);
        console.log(`   Type: ${data.recommendations[0].resourceType}`);
        console.log(`   Difficulty: ${data.recommendations[0].difficulty}`);
        console.log(`   Reasoning: ${data.recommendations[0].reasoning || 'N/A'}`);
        console.log(`   Priority: ${data.recommendations[0].priority || 'N/A'}`);
        console.log(`   Time: ${data.recommendations[0].estimatedTime || 'N/A'}`);
      }
    } else {
      const errorData = await response.json().catch(() => ({}));
      console.log(`❌ Error: ${response.status} - ${errorData.error || response.statusText}`);
    }
  } catch (error) {
    console.log('❌ Error testing course-specific recommendations:', error.message);
  }

  // Test 2: Filtered recommendations
  try {
    console.log('\n2. Testing filtered DeepSeek recommendations...');
    const response = await fetch(`${API_BASE}/api/deepseek-recommendations`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        selectedProgram: 'computer-science',
        selectedYear: '1',
        selectedSemester: '1',
        quizResults: [
          {
            quizId: 'intro-to-cs',
            courseId: 'intro-to-cs',
            quizTitle: 'Introduction to Computer Science',
            score: 75,
            total: 10,
            strengths: ['Basic Programming', 'Problem Solving'],
            weaknesses: ['Advanced Algorithms', 'Data Structures']
          }
        ]
      })
    });

    if (response.ok) {
      const data = await response.json();
      console.log('✅ Success! Filtered DeepSeek recommendations generated');
      console.log(`   Generated By: ${data.generatedBy || 'Unknown'}`);
      console.log(`   Enhanced: ${data.enhanced ? 'Yes' : 'No'}`);
      console.log(`   Course Recommendations: ${data.courseRecommendations?.length || 0}`);
      if (data.courseRecommendations?.length > 0) {
        console.log(`   First course: ${data.courseRecommendations[0].courseTitle}`);
        console.log(`   Recommendations: ${data.courseRecommendations[0].recommendations?.length || 0}`);
      }
    } else {
      const errorData = await response.json().catch(() => ({}));
      console.log(`❌ Error: ${response.status} - ${errorData.error || response.statusText}`);
    }
  } catch (error) {
    console.log('❌ Error testing filtered recommendations:', error.message);
  }

  // Test 3: General recommendations
  try {
    console.log('\n3. Testing general DeepSeek recommendations...');
    const response = await fetch(`${API_BASE}/api/deepseek-recommendations`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        userProfile: {
          program: 'Computer Science',
          interests: ['Web Development', 'Machine Learning'],
          recentTopics: ['React', 'Node.js', 'Python'],
          learningStyle: 'visual',
          preferredDifficulty: 'intermediate',
          availableTime: 10
        },
        quizResults: [
          {
            quizId: 'data-structures',
            courseId: 'data-structures',
            quizTitle: 'Data Structures and Algorithms',
            score: 85,
            total: 10,
            strengths: ['Arrays', 'Linked Lists'],
            weaknesses: ['Dynamic Programming', 'Graph Algorithms'],
          }
        ]
      })
    });

    if (response.ok) {
      const data = await response.json();
      console.log('✅ Success! General DeepSeek recommendations generated');
      console.log(`   Generated By: ${data.generatedBy || 'Unknown'}`);
      console.log(`   Enhanced: ${data.enhanced ? 'Yes' : 'No'}`);
      console.log(`   Recommendations: ${data.recommendations?.length || 0}`);
      if (data.recommendations?.length > 0) {
        console.log(`   First recommendation: ${data.recommendations[0].title}`);
        console.log(`   Type: ${data.recommendations[0].resourceType}`);
        console.log(`   Difficulty: ${data.recommendations[0].difficulty}`);
        console.log(`   Reasoning: ${data.recommendations[0].reasoning || 'N/A'}`);
        console.log(`   Priority: ${data.recommendations[0].priority || 'N/A'}`);
        console.log(`   Time: ${data.recommendations[0].estimatedTime || 'N/A'}`);
      }
    } else {
      const errorData = await response.json().catch(() => ({}));
      console.log(`❌ Error: ${response.status} - ${errorData.error || response.statusText}`);
    }
  } catch (error) {
    console.log('❌ Error testing general recommendations:', error.message);
  }

  // Test 4: Updated AI recommendations route with DeepSeek
  try {
    console.log('\n4. Testing updated AI recommendations route with DeepSeek...');
    const response = await fetch(`${API_BASE}/api/ai-recommendations`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        courseId: 'algorithms',
        useDeepSeek: true,
        quizResults: [
          {
            quizId: 'algorithms-basics',
            courseId: 'algorithms',
            quizTitle: 'Algorithms Basics',
            score: 70,
            total: 10,
            strengths: ['Sorting', 'Searching'],
            weaknesses: ['Complexity Analysis', 'Recursion']
          }
        ]
      })
    });

    if (response.ok) {
      const data = await response.json();
      console.log('✅ Success! Updated AI recommendations with DeepSeek');
      console.log(`   Generated By: ${data.generatedBy || 'Unknown'}`);
      console.log(`   Enhanced: ${data.enhanced ? 'Yes' : 'No'}`);
      console.log(`   Course: ${data.course?.title || 'N/A'}`);
      console.log(`   Performance: ${data.performance?.percentage || 'N/A'}%`);
      console.log(`   Recommendations: ${data.recommendations?.length || 0}`);
    } else {
      const errorData = await response.json().catch(() => ({}));
      console.log(`❌ Error: ${response.status} - ${errorData.error || response.statusText}`);
    }
  } catch (error) {
    console.log('❌ Error testing updated AI recommendations:', error.message);
  }

  console.log('\n🎉 DeepSeek integration testing completed!');
}

// Run the test
testDeepSeekIntegration().catch(console.error); 