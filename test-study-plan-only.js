// Test script to verify Gemini is only used for study plans
// Run with: node test-study-plan-only.js

require('dotenv').config()

const API_BASE = process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000'

async function testStudyPlanOnly() {
  console.log('🧪 Testing Study Plan Generation...')
  console.log(`📍 Using API base: ${API_BASE}`)

  const testCases = [
    { quizId: 'intro-to-cs', score: 7, total: 10, description: 'Good performance' },
    { quizId: 'python-basics', score: 3, total: 10, description: 'Needs improvement' },
    { quizId: 'data-structures', score: 9, total: 10, description: 'Excellent performance' }
  ]

  for (const testCase of testCases) {
    console.log(`\n📝 Testing: ${testCase.description}`)
    console.log(`   Quiz: ${testCase.quizId}, Score: ${testCase.score}/${testCase.total}`)

    try {
      const response = await fetch(`${API_BASE}/api/study-plan?quizId=${testCase.quizId}&score=${testCase.score}&total=${testCase.total}&useGemini=false`)

      if (response.ok) {
        const data = await response.json()
        console.log('   ✅ Study plan generated successfully')
        console.log(`   📊 Generated by: ${data.generatedBy}`)
        console.log(`   📚 Course: ${data.courseTitle || 'N/A'}`)
        console.log(`   🎯 Level: ${data.currentLevel || 'N/A'}`)
        
        if (data.recommendations && data.recommendations.length > 0) {
          console.log(`   📖 Recommendations: ${data.recommendations.length}`)
        }
      } else {
        console.log(`   ❌ Failed to generate study plan`)
        console.log(`   📊 Status: ${response.status}`)
      }
    } catch (error) {
      console.log(`   ❌ Error: ${error.message}`)
    }
  }
}

testStudyPlanOnly() 