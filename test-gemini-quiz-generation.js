require('dotenv').config()

const API_BASE = 'http://localhost:3000/api'

// Test cases for different courses
const testCases = [
  {
    courseId: "intro-to-cs",
    title: "Introduction to Computer Science",
    description: "Basic computer science concepts and programming fundamentals"
  },
  {
    courseId: "data-structures",
    title: "Data Structures and Algorithms",
    description: "Fundamental data structures and algorithm design"
  },
  {
    courseId: "artificial-intelligence",
    title: "Artificial Intelligence",
    description: "AI concepts, machine learning, and intelligent systems"
  },
  {
    courseId: "circuit-analysis",
    title: "Circuit Analysis",
    description: "Electrical circuit theory and analysis techniques"
  },
  {
    courseId: "intro-business",
    title: "Introduction to Business",
    description: "Business fundamentals and management principles"
  }
]

async function testGeminiQuizGeneration() {
  console.log("🧪 Testing Gemini Quiz Question Generation");
  console.log("=" .repeat(60));
  
  // Check if Gemini API key is configured
  if (!process.env.GEMINI_API_KEY || process.env.GEMINI_API_KEY === "your-gemini-api-key-here") {
    console.log("❌ GEMINI_API_KEY not configured in .env file");
    console.log("Please set your Gemini API key to test the quiz generation");
    return;
  }
  
  console.log("✅ Gemini API key configured");
  console.log("✅ Testing AI-powered quiz question generation\n");
  
  let passedTests = 0;
  let totalTests = testCases.length;
  
  for (const testCase of testCases) {
    console.log(`📋 Test: ${testCase.title}`);
    console.log(`   Course ID: ${testCase.courseId}`);
    console.log(`   Description: ${testCase.description}`);
    
    try {
      // Test generating questions for a specific course
      const response = await fetch(`${API_BASE}/generate-quiz-questions`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          courseId: testCase.courseId,
          questionCount: 5,
          difficulty: "Intermediate"
        })
      });
      
      if (response.ok) {
        const data = await response.json();
        
        if (data.success) {
          console.log(`   ✅ Questions generated successfully`);
          console.log(`      Generated: ${data.questionCount} questions`);
          console.log(`      Generated by: ${data.generatedBy}`);
          passedTests++;
        } else {
          console.log(`   ❌ Generation failed: ${data.error || 'Unknown error'}`);
        }
      } else {
        console.log(`   ❌ API error: ${response.status}`);
      }
    } catch (error) {
      console.log(`   ❌ Test error: ${error.message}`);
    }
    
    console.log(""); // Empty line for readability
  }
  
  // Test getting random questions
  console.log("🎲 Testing Random Question Retrieval");
  console.log("-" .repeat(40));
  
  try {
    const randomResponse = await fetch(`${API_BASE}/quizzes/intro-to-cs?randomize=true&questionCount=3`);
    
    if (randomResponse.ok) {
      const quizData = await randomResponse.json();
      
      if (quizData.questions && quizData.questions.length > 0) {
        console.log(`✅ Random questions retrieved successfully`);
        console.log(`   Quiz: ${quizData.title}`);
        console.log(`   Questions returned: ${quizData.questions.length}`);
        console.log(`   Sample question: "${quizData.questions[0].text.substring(0, 50)}..."`);
        passedTests++;
      } else {
        console.log(`❌ No questions found in random quiz`);
      }
    } else {
      console.log(`❌ Random quiz API error: ${randomResponse.status}`);
    }
  } catch (error) {
    console.log(`❌ Random quiz test error: ${error.message}`);
  }
  
  // Test getting all courses
  console.log("\n📚 Testing Course Listing");
  console.log("-" .repeat(40));
  
  try {
    const coursesResponse = await fetch(`${API_BASE}/generate-quiz-questions`);
    
    if (coursesResponse.ok) {
      const coursesData = await coursesResponse.json();
      
      if (coursesData.success && coursesData.courses) {
        console.log(`✅ Course listing retrieved successfully`);
        console.log(`   Total courses: ${coursesData.totalCourses}`);
        console.log(`   Sample courses:`);
        coursesData.courses.slice(0, 3).forEach(course => {
          console.log(`     - ${course.title} (${course.difficulty})`);
        });
        passedTests++;
      } else {
        console.log(`❌ Course listing failed: ${coursesData.error || 'Unknown error'}`);
      }
    } else {
      console.log(`❌ Course listing API error: ${coursesResponse.status}`);
    }
  } catch (error) {
    console.log(`❌ Course listing test error: ${error.message}`);
  }
  
  console.log("\n" + "=" .repeat(60));
  console.log("📊 GEMINI QUIZ GENERATION TEST RESULTS");
  console.log("=" .repeat(60));
  console.log(`✅ Passed: ${passedTests}/${totalTests + 2} tests`);
  console.log(`❌ Failed: ${totalTests + 2 - passedTests} tests`);
  
  if (passedTests === totalTests + 2) {
    console.log("\n🎉 All tests passed! Gemini quiz generation is working correctly.");
    console.log("Students will now get random, AI-generated questions for all courses.");
  } else {
    console.log("\n⚠️  Some tests failed. Check the error messages above.");
  }
}

// Run the test
testGeminiQuizGeneration()
  .then(() => {
    console.log('\n✅ Test completed');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\n❌ Test failed:', error);
    process.exit(1);
  }); 